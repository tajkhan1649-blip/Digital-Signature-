# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tk7ShBYOL6YtaIB3W8L-kfqQHuBf3Ew1
"""

from cryptography import x509
from cryptography.x509.oid import NameOID
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization
import datetime

# 1. Generate a private key
private_key = rsa.generate_private_key(
    public_exponent=65537,
    key_size=2048,
)

# 2. Define the subject and issuer of the certificate
subject = issuer = x509.Name([
    x509.NameAttribute(NameOID.COUNTRY_NAME, "GR"),  # Greece
    x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, "Attica"),
    x509.NameAttribute(NameOID.LOCALITY_NAME, "Athens"),
    x509.NameAttribute(NameOID.ORGANIZATION_NAME, "My Greek Organization"),
    x509.NameAttribute(NameOID.COMMON_NAME, "example.com"),
])

# 3. Create a CertificateBuilder
builder = x509.CertificateBuilder().subject_name(
    subject
).issuer_name(
    issuer
).public_key(
    private_key.public_key()
).serial_number(
    x509.random_serial_number()
).not_valid_before(
    datetime.datetime.now(datetime.timezone.utc)
).not_valid_after(
    datetime.datetime.now(datetime.timezone.utc) + datetime.timedelta(days=365)
)

# 4. Add extensions (optional but recommended)
builder = builder.add_extension(
    x509.SubjectAlternativeName([x509.DNSName("example.com")]),
    critical=False,
)

# 5. Sign the certificate with the private key
certificate = builder.sign(private_key, hashes.SHA256())

# 6. Save the certificate and private key to files
with open("certificate.pem", "wb") as f:
    f.write(certificate.public_bytes(serialization.Encoding.PEM))

with open("private_key.pem", "wb") as f:
    f.write(private_key.private_bytes(
        encoding=serialization.Encoding.PEM,
        format=serialization.PrivateFormat.PKCS8,
        encryption_algorithm=serialization.NoEncryption()
    ))

print("X.509 certificate and private key generatedÂ successfully.")

########################################################################3
X.509 certificate and private key generated successfully.

